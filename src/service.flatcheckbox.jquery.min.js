(function (n) { function e(t, i) { this.element = t, this.settings = n.extend({}, f, i), this._defaults = f, this._name = u, this._checked = !1, this._init() } var o = "1.0.1", u = "flatcheckbox", f = { label: "", onChecked: function () { }, onUnChecked: function () { } }; e.prototype = { _init: function () { var t = this, i; this._checked = n(this.element).prop("checked"), n(this.element).hide(), n(this.element).after('<div class="flcheckbox"><span class="ckbBox"></span><span class="ckbText">' + this.settings.label + "</span></div>"), i = n(this.element).next(), this._checked && i.addClass("flchecked"), i.bind("click", function () { if (i.toggleClass("flchecked"), t._checked = !t._checked, n(t.element).prop("checked", t._checked), t._checked) t.settings.onChecked(t.element); else t.settings.onUnChecked(t.element) }) }, label: function (t) { var i = n(this.element).next().find(".ckbText"); i.text(t[0]) } }, n.fn[u] = function (t) { var i = n(this).data(u); if (i && t.indexOf("_") != 0) return i[t](Array.prototype.slice.call(arguments, 1)); if (typeof t == "object" || !t) return i = new e(this, t), n(this).data(u, i), n(this); n.error("Wrong call to " + u) } })(jQuery, window, document);